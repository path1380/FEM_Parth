module Input_function
   use type_defs
   use basic_structures
   implicit none
   type(problem_data) :: prob_data_test
   type(numerics_data) :: num_data_test
contains
   subroutine Input_problem_data(prob_data)
      type(problem_data) :: prob_data
      prob_data_test%domain_length = 1.0_dp
      prob_data_test%domain_width = 1.0_dp
   end subroutine Input_problem_data

   subroutine Input_numerics_data(num_data)
      type(numerics_data) :: num_data
      num_data_test%num_divs_x = NNNN
      num_data_test%num_divs_y = NNNN
      num_data_test%num_quadrature_nodes = 3
   end subroutine Input_numerics_data
   
   real(kind=dp) function f(x,y)
      real(kind=dp), intent(in) :: x,y
      f = 4.0_dp*(x**2)*(y**2)
      !f = x*y*(1.0_dp-x)*(1.0_dp-y)
   end function f
end module Input_function
